# Consensus commit is required to use Multi-sorage Transactions.
scalar.db.transaction_manager=consensus-commit

# Multi-storage implementations is used for Consensus Commit
scalar.db.storage=multi-storage

#Define storage names, comma-separated format. In this case, "cassandra" and "postgresql"
scalar.db.multi_storage.storages=postgresql,mysql

scalar.db.multi_storage.storages.mysql.storage=jdbc
scalar.db.multi_storage.storages.mysql.contact_points=jdbc:mysql://localhost:3306/
scalar.db.multi_storage.storages.mysql.username=root
scalar.db.multi_storage.storages.mysql.password=password
# JDBC specific configurations for the "mysql" storage. As mentioned before, the format is "scalar.db.multi_storage.storages.<storage name>.<property name without the prefix 'scalar.db.'>". So for example, if you want to specify the "scalar.db.jdbc.connection_pool.min_idle" property for the "mysql" storage, you can specify "scalar.db.multi_storage.storages.mysql.jdbc.connection_pool.min_idle".
scalar.db.multi_storage.storages.mysql.jdbc.connection_pool.min_idle=5
scalar.db.multi_storage.storages.mysql.jdbc.connection_pool.max_idle=10
scalar.db.multi_storage.storages.mysql.jdbc.connection_pool.max_total=25


# The JDBC URL
scalar.db.multi_storage.storages.postgresql.storage=jdbc
scalar.db.multi_storage.storages.postgresql.contact_points=jdbc:postgresql://localhost:5432/
scalar.db.multi_storage.storages.postgresql.username=postgres
scalar.db.multi_storage.storages.postgresql.password=password

scalar.db.multi_storage.storages.postgresql.jdbc.connection_pool.min_idle=5
scalar.db.multi_storage.storages.postgresql.jdbc.connection_pool.max_idle=10
scalar.db.multi_storage.storages.postgresql.jdbc.connection_pool.max_total=25

# # The minimum number of idle connections in the connection pool. The default is 20
# scalar.db.jdbc.connection_pool.min_idle=20

# # The maximum number of connections that can remain idle in the connection pool. The default is 50
# scalar.db.jdbc.connection_pool.max_idle=50

# # The maximum total number of idle and borrowed connections that can be active at the same time for the connection pool. Use a negative value for no limit. The default is 100
# scalar.db.jdbc.connection_pool.max_total=100

# # Setting true to this property enables prepared statement pooling. The default is false
# scalar.db.jdbc.prepared_statements_pool.enabled=false

# # The maximum number of open statements that can be allocated from the statement pool at the same time, or negative for no limit. The default is -1
# scalar.db.jdbc.prepared_statements_pool.max_open=-1

# # # Isolation level for JDBC. Either READ_UNCOMMITTED or READ_COMMITTED or REPEATABLE_READ or SERIALIZABLE can be specified
# # scalar.db.jdbc.isolation_level=

# # # The schema name of the table metadata. If not specified, the default name ("scalardb") is used
# # scalar.db.jdbc.table_metadata.schema=

# # The minimum number of idle connections in the connection pool for the table metadata. The default is 5
# scalar.db.jdbc.table_metadata.connection_pool.min_idle=5

# # The maximum number of connections that can remain idle in the connection pool for the table metadata. The default is 10
# scalar.db.jdbc.table_metadata.connection_pool.max_idle=10

# # The maximum total number of idle and borrowed connections that can be active at the same time for the connection pool for the table metadata. Use a negative value for no limit. The default is 25
# scalar.db.jdbc.table_metadata.connection_pool.max_total=25

# # The minimum number of idle connections in the connection pool for admin. The default is 5
# scalar.db.jdbc.admin.connection_pool.min_idle=5

# # The maximum number of connections that can remain idle in the connection pool for admin. The default is 10
# scalar.db.jdbc.admin.connection_pool.max_idle=10

# # The maximum total number of idle and borrowed connections that can be active at the same time for the connection pool for admin. Use a negative value for no limit. The default is 25
# scalar.db.jdbc.admin.connection_pool.max_total=25

# Define namespace mappings from a namespace name to a storage. The format is "<namespace name>:<storage name>,...".
scalar.db.multi_storage.namespace_mapping=trafficroot:mysql,user:postgresql,reservedinfo:postgresql,pay:postgresql

# Define the default storage that's used if a specified table doesn't have any mapping.
scalar.db.multi_storage.default_storage=postgresql



# # The JDBC URL
# scalar.db.contact_points=jdbc:postgresql://localhost:5432/

# # The username and password
# scalar.db.username=postgres
# scalar.db.password=matutani

# # JDBC storage implementation
# scalar.db.storage=jdbc

# # The minimum number of idle connections in the connection pool. The default is 20
# scalar.db.jdbc.connection_pool.min_idle=20

# # The maximum number of connections that can remain idle in the connection pool. The default is 50
# scalar.db.jdbc.connection_pool.max_idle=50

# # The maximum total number of idle and borrowed connections that can be active at the same time for the connection pool. Use a negative value for no limit. The default is 100
# scalar.db.jdbc.connection_pool.max_total=100

# # Setting true to this property enables prepared statement pooling. The default is false
# scalar.db.jdbc.prepared_statements_pool.enabled=false

# # The maximum number of open statements that can be allocated from the statement pool at the same time, or negative for no limit. The default is -1
# scalar.db.jdbc.prepared_statements_pool.max_open=-1

# # Isolation level for JDBC. Either READ_UNCOMMITTED or READ_COMMITTED or REPEATABLE_READ or SERIALIZABLE can be specified
# scalar.db.jdbc.isolation_level=

# # The schema name of the table metadata. If not specified, the default name ("scalardb") is used
# scalar.db.jdbc.table_metadata.schema=

# # The minimum number of idle connections in the connection pool for the table metadata. The default is 5
# scalar.db.jdbc.table_metadata.connection_pool.min_idle=5

# # The maximum number of connections that can remain idle in the connection pool for the table metadata. The default is 10
# scalar.db.jdbc.table_metadata.connection_pool.max_idle=10

# # The maximum total number of idle and borrowed connections that can be active at the same time for the connection pool for the table metadata. Use a negative value for no limit. The default is 25
# scalar.db.jdbc.table_metadata.connection_pool.max_total=25

# # The minimum number of idle connections in the connection pool for admin. The default is 5
# scalar.db.jdbc.admin.connection_pool.min_idle=5

# # The maximum number of connections that can remain idle in the connection pool for admin. The default is 10
# scalar.db.jdbc.admin.connection_pool.max_idle=10

# # The maximum total number of idle and borrowed connections that can be active at the same time for the connection pool for admin. Use a negative value for no limit. The default is 25
# scalar.db.jdbc.admin.connection_pool.max_total=25